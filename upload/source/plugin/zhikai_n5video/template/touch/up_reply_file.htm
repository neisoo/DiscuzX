<!--{block file}-->
<link href="source/plugin/zhikai_n5video/static/css/style.css" rel="stylesheet" />
<link href="source/plugin/zhikai_n5video/uikit/css/uikit.min.css" rel="stylesheet" />
<link href="source/plugin/zhikai_n5video/uikit/css/components/progress.css " rel="stylesheet" />
<link rel="stylesheet" href="source/plugin/zhikai_n5video/video-js/video-js.min.css">

<script type="text/javascript"src="source/plugin/zhikai_n5video/static/js/jquery.min.js"></script>
<script type="text/javascript" src="source/plugin/zhikai_n5video/static/js/jquery.shardupload.js"></script>
<script type="text/javascript" src="source/plugin/zhikai_n5video/static/js/jquery.scroll.js"></script>
<script type="text/javascript" src="source/plugin/zhikai_n5video/uikit/js/uikit.min.js"></script>
<script type="text/javascript" src="source/plugin/zhikai_n5video/video-js/video.min.js"></script>

<style>
::cue {
	background: none;
	color: #fff;
	text-shadow: 0 1px #000, 1px 0 #000, -1px 0 #000, 0 -1px #000;
	font-size: medium;
}
::cue(v[voice=hanhan]) {
	color: green;
}
::cue(.red) {
	color: red;
}

.fixed_div {
	width: 100%;
	position: fixed;
	background: #e5e5e5;
	top: 0;
	z-index: 1000;
	left: 0px;
	border: 1px solid red;
}

.sentence_wrap {
	padding-top: 80px;
}

.vidoe_wrap{
	width:100%;
	position:relative;
	padding-bottom:62%; /*需要用padding来维持16:9比例,也就是9除以16*/
	height: 0;
	video{
		position: absolute;
		top:0;
		left: 0;
		width: 100%;
		height: 100%
	}
}

/* 显示当前时间和总时间 */
.video-js .vjs-time-control {
    display: block;
}
.video-js .vjs-remaining-time {
    display: none;
}
</style>

<div class="zhikai-player cl fixed_div">
<video id="video_{$_G[tid]}" class="video-js vjs-default-skin vjs-big-play-centered vidoe_wrap">
	<source src="{$attachInfo[video]}" type='video/mp4'>
	<p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that<a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
	<!--{if attachInfo['subtitle'] != null}-->
	<track kind="subtitles" src="{$attachInfo[subtitle]}" srclang="en" id="original" label="{lang zhikai_n5video:lang_068}" default></track>
	<!--{/if}--> 
	<!--{if $attachInfo['tsubtitle'] != null}-->
	<track kind="subtitles" src="{$attachInfo[tsubtitle]}" srclang="zh" id="translation" label="{lang zhikai_n5video:lang_069}"></track>
	<!--{/if}--> 
</video>
</div>
<div id="sutitle_list" class="sentence_wrap">
</div>

<script type="text/javascript">
var jq = jQuery.noConflict();

var videoOptions = {
	poster: '{$attachInfo[cover]}',
	controls: true,
	playbackRates: [0.5, 0.75, 1, 1.5, 2],
	controlBar: {
		playToggle: false,
		volumePanel: false,
		currentTimeDisplay: true,
		durationDisplay: true,
		remainingTimeDisplay: false,
		progressControl: true,
		fullscreenToggle: false,
		chaptersButton: false,
		descriptionsButton: false,
		subsCapsButton: false,
	},
	// 禁用自带来的bigPlayButton。
	children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', /*'bigPlayButton',*/ 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],
	inactivityTimeout: 10000, // 不要自动inactive.
	
};

var player = videojs('video_{$_G[tid]}', videoOptions);
var subtitleInit = false;
var subtitleCount = 0;
var subtitleCurrent = -1;
var sentenceStartTime = 0;
var sentenceEndTime = 0;

player.on("ready", function(){
	var origTrack = player.textTracks().getTrackById("original");
	var transTrack = player.textTracks().getTrackById("translation");

	// 强制加载所有的字幕。
	origTrack.mode = 'showing';
	transTrack.mode = 'showing';
});

player.on("canplay", function(){
	
	if (!subtitleInit) {
		subtitleInit = true;

		var origTrack = player.textTracks().getTrackById("original");
		var transTrack = player.textTracks().getTrackById("translation");
		
		// 获取原文、译文和时间段。
		if (origTrack) {
			subtitleCount = origTrack.cues.length;
			for (var i = 0; i < subtitleCount; i++) {
				var cue = origTrack.cues[i];

				var dom = '<div class="n5sq_fbbt cl" id="sentence_' + i +
					'" startTime="' + cue.startTime +
					'" endTime="' + cue.endTime + '">' +
					'<b>' + (i + 1) + '/' + subtitleCount + '</b><br> ' +
					cue.text;

				// 译文
				if (transTrack && transTrack.cues && transTrack.cues[i]) {
					dom += '<br/>' + transTrack.cues[i].text;
				}
				dom += '</div>';

				jq('#sutitle_list').append(dom);
			}
		}
		
		//origTrack.mode = 'hidden';
		//transTrack.mode = 'hidden';
		
		// 定位于列表开始
		UIkit.Utils.scrollToElement(jq('#sentence_0'), {
			offset: $('#sentence_0').offset().top
		});

		sentencePlay(0);
	}
});

// 使用自己的大播放按钮。
function dummyBigPlayBtnPlugin(options) {        
	var playBtn = document.createElement('div');
	playBtn.className = 'vjs-big-play-button';
	playBtn.innerHTML = '<span aria-hidden="true" class="vjs-icon-placeholder"></span><span class="vjs-control-text" aria-live="polite">Play Video</span>';
	player.el().appendChild(playBtn);
	playBtn.onclick = function () {
		//恢复播放并隐藏大播放按钮和控制条
		player.userActive(false);
		player.play();
		jq(".vjs-big-play-button").css("display","none");
		jq(".vjs-control-bar").css("opacity","0");
	};

};
videojs.plugin('dummyBigPlayBtnPlugin', dummyBigPlayBtnPlugin);
player.dummyBigPlayBtnPlugin({});    
player.userActive(false);

// 点击视频时，暂停和播放视频。
player.on("useractive", function(){
	console.log("useractive");
	if (jq(".vjs-big-play-button").css("display") == "block") {
		//恢复播放并隐藏大播放按钮和控制条
		player.play();
		jq(".vjs-big-play-button").css("display","none");
		jq(".vjs-control-bar").css("opacity","0");
	}
	else {
		//点击屏幕后暂停并显示大播放按钮和控制条
		player.pause();
		jq(".vjs-big-play-button").css("display","block");
		jq(".vjs-control-bar").css("opacity","1");
	}
});

player.on("userinactive", function(){
	console.log("userinactive");
	if (jq(".vjs-big-play-button").css("display") == "block") {
		//恢复播放并隐藏大播放按钮和控制条
		player.play();
		jq(".vjs-big-play-button").css("display","none");
		jq(".vjs-control-bar").css("opacity","0");
	}
	else {
		//点击屏幕后暂停并显示大播放按钮和控制条
		player.pause();
		jq(".vjs-big-play-button").css("display","block");
		jq(".vjs-control-bar").css("opacity","1");
	}
});

// 设置播放区间到句子的范围内。
function sentencePlay(index) {
	if (index != subtitleCurrent) {
		subtitleCurrent = index;

		sentenceStartTime = $('#sentence_' + subtitleCurrent).attr('startTime');
		sentenceEndTime = $('#sentence_' + subtitleCurrent).attr('endTime');
		player.currentTime(sentenceStartTime);
		player.on('timeupdate', function() {
			if (player.currentTime() >= sentenceEndTime) {
				player.currentTime(sentenceStartTime);
			}
		});
		player.play();
	}
}

function onScrollStop(e) {
	if (subtitleCount > 0) {
		var x, h;
		var i;
		var top = $('#sentence_0').offset().top;
		var align = $(window).scrollTop() + top;

		for (i = 0; i < subtitleCount; i++) {
			x = $('#sentence_' + i).offset().top;
			h = $('#sentence_' + i).outerHeight();

			if (align > x && align < (x + h)) {

				if (align <= x + h / 2) {
					// 向上对齐当前
					UIkit.Utils.scrollToElement(jq('#sentence_' + i), {
						offset: top
					});
					
					sentencePlay(i);
				}
				else {
					// 向下对齐下一个
					if (i < (subtitleCount - 1)) {
						UIkit.Utils.scrollToElement(jq('#sentence_' + (i + 1)), {
							offset: top
						});
					}
					
					sentencePlay(i + 1);
				}

				break;
			}
			else if (align == x) {
				subtitleCurrent = i;
				break;
			}
		}
	}
}

// 监听滚动结束
jq(window).bind('scrollstop', onScrollStop);

//jq(".zhikai-player").on('click')
</script>

<!--{/block}-->